{"version":3,"sources":["Components/SortingMethods/changeButtons.js","Components/SortingMethods/selectionSort.js","Components/SortingMethods/mergeSort.js","Components/SortingMethods/bubbleSorting.js","Components/SortingMethods/QuickSort.js","Components/Home.js","Components/SortingMethods/changeColor.js","App.js","serviceWorker.js","index.js"],"names":["changeButtonsToTrue","buttons","document","getElementsByClassName","slider","option","getElementsByTagName","selected","getElementById","button","style","backgroundColor","color","disabled","s","display","changeButtonsToFalse","changeColor","animations","speed","newAnimations","i","length","j","push","comparison","arrayBar","swap","barOne","barTwo","barOneStyle","barTwoStyle","setTimeout","temp","height","temp2","innerHTML","mergeSort","array","a","auxiliaryArray","slice","mergeHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","merge","arrayLength","arraybar","newHeight","val","len","returnHeight","quickSort","quickSortHelper","start","end","pivotIdx","pivot","comparision","Partition","animate","Home","props","state","sliderRange","minRange","maxRange","clicked","algo","speedOfAlgo","getSliderValue","bind","selectionSort","insertionSorting","mergeSorting","returnWidth","bubbleSorting","changeSpeed","this","generateNewArray","e","preventDefault","setState","target","value","console","log","min","max","curEle","counter","random","indexOf","round","tmp","animaiton","animationComparison","animationSwap","animation","stateArray","sorted","className","map","key","width","type","name","onChange","onClick","id","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f00923df.chunk.js","sourcesContent":["export const changeButtonsToTrue = ()=>{\r\n    const buttons = document.getElementsByClassName(\"sortingButton\")\r\n    const slider = document.getElementsByClassName(\"slider\")\r\n    var option = document.getElementsByTagName(\"option\")\r\n    let selected = document.getElementById(\"select-selected\")\r\n    for(let button of buttons){\r\n        button.style.backgroundColor = \"red\"\r\n        button.style.color = \"black\"\r\n        button.disabled = true\r\n    }\r\n    let s = document.getElementsByTagName(\"select\")\r\n    \r\n    //console.log(selected)\r\n    slider[1].disabled = true\r\n    s[0].style.display = \"none\"\r\n    selected.disabled = true\r\n    for(let op of option){\r\n        op.disabled = true\r\n    }\r\n    slider.disabled = true\r\n}\r\n\r\n\r\nexport const changeButtonsToFalse = ()=>{\r\n    const buttons = document.getElementsByClassName(\"sortingButton\")\r\n    const slider = document.getElementsByClassName(\"slider\")\r\n    var option = document.getElementsByTagName(\"option\")\r\n    let selected = document.getElementById(\"select-selected\")\r\n    let s = document.getElementsByTagName(\"select\")\r\n    \r\n    //console.log(selected)\r\n    s[0].style.display = \"inline\"\r\n    for(let button of buttons){\r\n        button.style.backgroundColor = \"darkolivegreen\"\r\n        button.style.color = \"white\"\r\n        button.disabled = false\r\n    }\r\n    selected.disabled = false\r\n    for(let op of option){\r\n        op.disabled = false\r\n    }\r\n    slider[1].disabled = false\r\n}","import {changeButtonsToFalse, changeButtonsToTrue} from './changeButtons'\r\n\r\nexport const selectionSort = (array, speed) =>{\r\n  changeButtonsToTrue()\r\n  let min = 0\r\n  let tmp = 0\r\n  let len = array.length\r\n  let animations = []\r\n  let j = 0\r\n  for(var i=0; i < len-1 ; i++){\r\n    min = i\r\n    j = i+1\r\n    let animaiton = []\r\n    let animationComparison = {}\r\n    for( j = i+1; j<len; j++){\r\n      animationComparison = {comparison : [i, j]}\r\n      animaiton.push(animationComparison)\r\n      if(array[j] < array[min]){\r\n        min = j\r\n      }\r\n    }\r\n    \r\n    let animationSwap = {swap : [min, i]}\r\n    animaiton.push(animationSwap)\r\n    animations.push(animaiton)\r\n    tmp = array[i]\r\n    array[i] = array[min]\r\n    array[min] = tmp\r\n    \r\n  }\r\n  changeColor(animations, speed)\r\n}\r\n\r\n const changeColor = (animations, speed) =>{\r\n  let newAnimations = []\r\n\r\n  for(let i = 0; i<animations.length; i++){\r\n      for(let j = 0; j<animations[i].length; j++){\r\n        const swapControl = j!== animations[i].length-1\r\n        if(swapControl){\r\n          newAnimations.push(animations[i][j].comparison)\r\n          newAnimations.push(animations[i][j].comparison)\r\n        }else{\r\n          newAnimations.push(animations[i][j])\r\n        }\r\n      }\r\n  }\r\n  \r\n  const arrayBar = document.getElementsByClassName(\"array-bar\")\r\n  for(let i = 0; i<newAnimations.length; i++){\r\n      \r\n      if(!(newAnimations[i].swap)){\r\n        let [barOne, barTwo] = newAnimations[i]\r\n          let barOneStyle = arrayBar[barOne].style\r\n          let barTwoStyle = arrayBar[barTwo].style\r\n          const color = i%3 === 0 ? 'red' :'turquoise'\r\n          setTimeout(() => {\r\n              barOneStyle.backgroundColor = color\r\n              barTwoStyle.backgroundColor = color\r\n          }, i*speed);\r\n      }else{\r\n        let [barOne, barTwo] = newAnimations[i].swap\r\n              let barOneStyle = arrayBar[barOne].style\r\n              let barTwoStyle = arrayBar[barTwo].style\r\n              setTimeout(() => {\r\n                barOneStyle.backgroundColor = 'turquoise'\r\n              barTwoStyle.backgroundColor = 'turquoise'\r\n              let temp = barOneStyle.height\r\n              barOneStyle.height = barTwoStyle.height\r\n              barTwoStyle.height = temp\r\n              let temp2 = arrayBar[barOne].innerHTML\r\n              arrayBar[barOne].innerHTML = arrayBar[barTwo].innerHTML\r\n              arrayBar[barTwo].innerHTML = temp2\r\n              if((i+1) === newAnimations.length){\r\n                changeButtonsToFalse()\r\n            }\r\n              }, i*speed);\r\n      }\r\n  }\r\n}\r\n","import {changeButtonsToFalse, changeButtonsToTrue} from './changeButtons'\r\n\r\nexport const mergeSort = async (array, speed) =>{\r\n    changeButtonsToTrue()\r\n    let animations = []\r\n    const auxiliaryArray = array.slice();\r\n    mergeHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n    changeColor(animations, speed, array.length)\r\n}\r\n\r\nfunction mergeHelper(mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,){\r\n    \r\n    if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  merge (mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction merge(\r\n    mainArray,\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ){\r\n    let k = startIdx\r\n    let i = startIdx\r\n    let j = middleIdx+1\r\n\r\n    while( i <= middleIdx && j <= endIdx ){\r\n        animations.push([i, j])\r\n        animations.push([i, j])\r\n        if(auxiliaryArray[i] <= auxiliaryArray[j]){\r\n            animations.push([k, auxiliaryArray[i]]);\r\n            mainArray[k++] = auxiliaryArray[i++];\r\n        }else{\r\n            animations.push([k, auxiliaryArray[j]]);\r\n            mainArray[k++] = auxiliaryArray[j++];\r\n        }\r\n    }\r\n\r\n    while( i <= middleIdx){\r\n        animations.push([i, i])\r\n        animations.push([i, i])\r\n        animations.push([k, auxiliaryArray[i]]);\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n    }\r\n\r\n    while( j <= endIdx){\r\n        animations.push([j, j])\r\n        animations.push([j, j])\r\n        animations.push([k, auxiliaryArray[j]])\r\n        mainArray[k++] = auxiliaryArray[j++]\r\n    }\r\n\r\n}\r\n\r\n function  changeColor(newAnimations, speed, arrayLength){\r\n\r\n    for(let i = 0; i< newAnimations.length ; i++){\r\n        const arraybar = document.getElementsByClassName(\"array-bar\")\r\n        const colorCondition = i%3 !== 2\r\n        if(colorCondition){\r\n            let [barOne, barTwo] = newAnimations[i]\r\n            const barOneStyle = arraybar[barOne].style\r\n            const barTwoStyle = arraybar[barTwo].style\r\n            const color = i % 3 === 0 ? \"red\" : \"turquoise\";\r\n            setTimeout(() => {\r\n                barOneStyle.backgroundColor = color\r\n                barTwoStyle.backgroundColor = color\r\n            }, i*speed)\r\n        }else{\r\n            setTimeout(() => {\r\n                const [barOne , newHeight] = newAnimations[i]\r\n                const barOneStyle = arraybar[barOne].style\r\n                if(arraybar[barOne].innerHTML !== ''){\r\n                    arraybar[barOne].innerHTML = newHeight\r\n                }\r\n                barOneStyle.height = returnHeight(newHeight, arrayLength)+\"px\"\r\n                if((i+1) === newAnimations.length){\r\n                    changeButtonsToFalse()\r\n                }\r\n            }, i*speed);\r\n        }\r\n    }\r\n}\r\n\r\nfunction returnHeight(val, len){\r\n    if(len <= 25){\r\n        return val*16\r\n    }\r\n    else if(len < 40){\r\n        return val*8\r\n    }else if(len > 40 && len <50){\r\n        return val*5\r\n    }else if(len > 50 && len <70){\r\n        return val*4\r\n    }else if(len > 70 && len <90){\r\n        return val*4\r\n    }else if(len > 90 && len <110){\r\n        return val*2\r\n    }else if(len > 110 && len <130){\r\n        return val\r\n    }else if(len > 130 && len <150){\r\n        return val\r\n    }else if(len > 150 && len <300){\r\n        return val\r\n    }\r\n}","export const bubbleSorting = (stateArray) =>{\r\n\r\n    let sorted = false\r\n    let animations = []\r\n    while(!sorted){\r\n        sorted = true\r\n        \r\n        for(let i = 0; i<stateArray.length-1; i++ ){\r\n            let animationComparison = {comparison : [i, i+1]}\r\n            let animationSwap = {}\r\n            if(stateArray[i] > stateArray[i+1]){\r\n                animationSwap = {swap : [i, i+1]}\r\n                let temp = stateArray[i+1]\r\n                stateArray[i+1] = stateArray[i]\r\n                stateArray[i] = temp\r\n                sorted = false\r\n            }else{\r\n                animationSwap = {swap: \"no swap\"}\r\n            }\r\n            animations.push([animationComparison, animationSwap])\r\n        }\r\n    }\r\n    return animations\r\n}   \r\n","import {changeButtonsToFalse, changeButtonsToTrue} from './changeButtons'\r\n\r\nexport const quickSort = (array, speed) =>{\r\n    let animations = []\r\n\r\n    quickSortHelper(array, 0, array.length-1, animations)\r\n    animate(animations, speed)\r\n}\r\n\r\nfunction quickSortHelper(array, start, end, animations){\r\n    if(start < end){\r\n        let pivotIdx = Partition(array, start, end, animations)\r\n        quickSortHelper(array, start, pivotIdx-1, animations)\r\n        quickSortHelper(array, pivotIdx+1, end, animations)\r\n    }\r\n}\r\n\r\nfunction Partition(array, start, end, animations){\r\n    let pivot = array[end]\r\n    let pivotIdx = start\r\n\r\n    for(let i = start; i<end; i++){\r\n        animations.push({comparision : [i, end]})\r\n        animations.push({comparision : [i, end]})\r\n        if( array[i] <= pivot ){\r\n            animations.push({swap : [i, pivotIdx]})\r\n            let temp = array[pivotIdx]\r\n            array[pivotIdx] = array[i]\r\n            array[i] = temp\r\n            pivotIdx++\r\n        }\r\n    }\r\n\r\n    animations.push({comparision : [pivotIdx, end]})\r\n    animations.push({comparision : [pivotIdx, end]})\r\n    animations.push({swap : [pivotIdx, end]})\r\n    let temp = array[pivotIdx]\r\n    array[pivotIdx] = array[end]\r\n    array[end] = temp\r\n    return pivotIdx\r\n}\r\n\r\nfunction animate(animations, speed){\r\n    changeButtonsToTrue()\r\n    for(let i = 0; i<animations.length; i++){\r\n        const arrayBar = document.getElementsByClassName(\"array-bar\")\r\n        if(animations[i].comparision){\r\n            let [barOne, barTwo] = animations[i].comparision\r\n            const barOneStyle = arrayBar[barOne].style\r\n            const barTwoStyle = arrayBar[barTwo].style\r\n            setTimeout(() => {\r\n                barOneStyle.backgroundColor = 'red'\r\n                barTwoStyle.backgroundColor = 'turquoise'\r\n            }, setTimeout(() => {\r\n                barOneStyle.backgroundColor = 'turquoise'\r\n                barTwoStyle.backgroundColor = 'red'\r\n            }, i*speed));\r\n            \r\n        }else{\r\n            let [barOne, barTwo] = animations[i].swap\r\n            const barOneStyle = arrayBar[barOne].style\r\n            const barTwoStyle = arrayBar[barTwo].style\r\n            setTimeout(() => {\r\n                let temp = barOneStyle.height\r\n                barOneStyle.height = barTwoStyle.height\r\n                barTwoStyle.height = temp\r\n                let temp2 = arrayBar[barOne].innerHTML\r\n              arrayBar[barOne].innerHTML = arrayBar[barTwo].innerHTML\r\n              arrayBar[barTwo].innerHTML = temp2\r\n              barTwoStyle.backgroundColor = 'turquoise'\r\n              barOneStyle.backgroundColor = 'turquoise'\r\n              if((i+1) === animations.length){\r\n                changeButtonsToFalse()\r\n            }\r\n            }, i*speed);\r\n        }\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport '../index.css'\r\n//import Algorithms from './PageComponents/algorithms'\r\n\r\nimport {selectionSort} from './SortingMethods/selectionSort'\r\nimport {changeColor} from './SortingMethods/changeColor'\r\nimport {mergeSort} from './SortingMethods/mergeSort'\r\nimport {bubbleSorting} from './SortingMethods/bubbleSorting'\r\nimport { quickSort } from './SortingMethods/QuickSort'\r\n\r\nexport default class Home extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            array:[],\r\n            sliderRange:10,\r\n            minRange:10,\r\n            maxRange:300,\r\n            clicked: false,\r\n            algo: '',\r\n            speedOfAlgo:3\r\n        }\r\n\r\n        this.getSliderValue = this.getSliderValue.bind(this)\r\n        this.selectionSort = this.selectionSort.bind(this)\r\n        this.insertionSorting = this.mergeSorting.bind(this)\r\n        this.returnHeight = this.returnHeight.bind(this)\r\n        this.returnWidth = this.returnWidth.bind(this)\r\n        this.bubbleSorting = this.bubbleSorting.bind(this)\r\n        this.changeSpeed = this.changeSpeed.bind(this)\r\n        this.quickSort = this.quickSort.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.generateNewArray()\r\n    }\r\n\r\n    getSliderValue(e){\r\n        e.preventDefault()\r\n        this.setState({\r\n            sliderRange:e.target.value\r\n        })\r\n        this.generateNewArray()\r\n        \r\n    }\r\n\r\n    changeSpeed(e){\r\n        console.log(\"hello\")\r\n        this.setState({\r\n            speedOfAlgo:e.target.value\r\n        })\r\n    }\r\n\r\n    generateNewArray(){\r\n        let array = []\r\n        let curEle =0\r\n        let counter = 2\r\n        for(let i=1; i<=this.state.sliderRange; i++){\r\n                curEle = randomNumber(this.state.minRange, this.state.sliderRange)\r\n                if(array.indexOf(curEle) !== -1){\r\n                    curEle = Math.round(Math.random()*counter)\r\n                    array.push(curEle)\r\n                    counter = counter+1\r\n                }else{\r\n                    array.push(curEle)\r\n                }\r\n        }\r\n        this.setState({\r\n            array:array\r\n        })\r\n    }\r\n    \r\n    selectionSort(){\r\n        selectionSort(this.state.array, this.state.speedOfAlgo)\r\n        \r\n    }\r\n\r\n    mergeSorting(){\r\n        mergeSort(this.state.array, this.state.speedOfAlgo)\r\n    }\r\n\r\n    bubbleSorting(){\r\n        let animations = bubbleSorting(this.state.array)\r\n        changeColor(animations, this.state.speedOfAlgo)\r\n    }\r\n\r\n    quickSort(){\r\n        quickSort(this.state.array, this.state.speedOfAlgo)\r\n    }\r\n\r\n\r\n    returnHeight(val){\r\n        if(this.state.array.length < 20){\r\n            return val*16\r\n        }\r\n        else if(this.state.array.length < 40){\r\n            return val*8\r\n        }else if(this.state.array.length > 40 && this.state.array.length <50){\r\n            return val*5\r\n        }else if(this.state.array.length > 50 && this.state.array.length <70){\r\n            return val*4\r\n        }else if(this.state.array.length > 70 && this.state.array.length <90){\r\n            return val*4\r\n        }else if(this.state.array.length > 90 && this.state.array.length <110){\r\n            return val*2\r\n        }else if(this.state.array.length > 110 && this.state.array.length <130){\r\n            return val\r\n        }else if(this.state.array.length > 130 && this.state.array.length <150){\r\n            return val\r\n        }else if(this.state.array.length > 150 && this.state.array.length <300){\r\n            return val\r\n        }\r\n    }\r\n\r\n    returnWidth(){\r\n        if(this.state.array.length < 20){\r\n            return 60\r\n        }\r\n        else if(this.state.array.length < 40){\r\n            return 25\r\n        }else if(this.state.array.length > 40 && this.state.array.length <50){\r\n            return 20\r\n        }else if(this.state.array.length > 50 && this.state.array.length <70){\r\n            return 15\r\n        }else if(this.state.array.length > 70 && this.state.array.length <90){\r\n            return 11\r\n        }else if(this.state.array.length > 90 && this.state.array.length <110){\r\n            return 9\r\n        }else if(this.state.array.length > 110 && this.state.array.length <130){\r\n            return 7\r\n        }else if(this.state.array.length > 130 && this.state.array.length <150){\r\n            return 4\r\n        }else if(this.state.array.length > 150 && this.state.array.length <300){\r\n            return 2\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                <center><h1>Sorting Algorithms Visualizer</h1></center>\r\n                <div className=\"array-container\">\r\n                    {this.state.array.map((value, i)=>{\r\n                        return(\r\n                            <div key = {i}\r\n                            className=\"array-bar\"\r\n                            style={{height:`${this.returnHeight(value)}px`,width:`${this.returnWidth()}px`}}\r\n                            >{this.state.array.length < 30 ? value : ''}</div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"slider\">\r\n                    <b>Pick your Range</b>\r\n                    <input type=\"range\" min={this.state.minRange} max={this.state.maxRange} name=\"rangePicker\" className=\"slider\" onChange={this.getSliderValue}/>\r\n                    <button className=\"sortingButton\"  onClick={()=>this.generateNewArray()}> Generate New Array </button>\r\n                    <button disabled = { this.state.clicked ? true : false}  className=\"sortingButton\" value=\"Selection Sort\" onClick={()=>{this.selectionSort()}}>Sort by Slection Sort</button>\r\n                    <button disabled = { this.state.clicked ? true : false}  className=\"sortingButton\" value=\"Merge Sort\" onClick={()=>{this.mergeSorting()}}>Sort by Merge Sort</button>\r\n                    <button disabled = { this.state.clicked ? true : false}  className=\"sortingButton\" value=\"Bubble Sort\" onClick={()=>{this.bubbleSorting()}}>Sort by Bubble Sort</button>\r\n                    <button disabled = { this.state.clicked ? true : false}  className=\"sortingButton\" value=\"Quick Sort\" onClick={()=>{this.quickSort()}}>Sort by Quick Sort</button>\r\n                    <label>Speed : </label>\r\n                    <select onClick={(e)=>this.changeSpeed(e)} id=\"select-selected\" style={{width:'100px'}}>\r\n                        <option value=\"3\">Fast</option>\r\n                        <option value=\"10\">Medium</option>\r\n                        <option value=\"30\">Slow</option>\r\n                    </select>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction randomNumber(min, max){\r\n    return Math.floor((Math.random() * (max-min+1)+min)*1.65)\r\n}","import {changeButtonsToFalse, changeButtonsToTrue} from './changeButtons'\r\n\r\nexport const  changeColor = (animations, speed)=>{\r\n    changeButtonsToTrue()\r\n    let newAnimations = []\r\n\r\n    for(let animation of animations){\r\n        newAnimations.push(animation[0].comparison)\r\n        newAnimations.push(animation[0].comparison)\r\n        newAnimations.push(animation[1].swap)\r\n    }\r\n    \r\n    for(let i = 0; i<newAnimations.length; i++){\r\n        const arrayBar = document.getElementsByClassName(\"array-bar\")\r\n        const colorChange = i % 3 !== 2\r\n        \r\n        if(colorChange){\r\n            let [barOne, barTwo] = newAnimations[i]\r\n            let barOneStyle = arrayBar[barOne].style\r\n            let barTwoStyle = arrayBar[barTwo].style\r\n            const color = i%3 === 0 ? 'red' :'turquoise'\r\n            setTimeout(() => {\r\n                barOneStyle.backgroundColor = color\r\n                barTwoStyle.backgroundColor = color\r\n                barOneStyle = 'turquoise'\r\n            }, i*speed);\r\n        }else{\r\n            if(!(newAnimations[i] === 'no swap')){\r\n                let [barOne, barTwo] = newAnimations[i]\r\n                let barOneStyle = arrayBar[barOne].style\r\n                let barTwoStyle = arrayBar[barTwo].style\r\n                setTimeout(() => {\r\n                let temp = barOneStyle.height\r\n                barOneStyle.height = barTwoStyle.height\r\n                barTwoStyle.height = temp\r\n                let temp2 = arrayBar[barOne].innerHTML\r\n                arrayBar[barOne].innerHTML = arrayBar[barTwo].innerHTML\r\n                arrayBar[barTwo].innerHTML = temp2\r\n                if((i+1) === newAnimations.length){\r\n                    changeButtonsToFalse()\r\n                }\r\n                }, i*speed);\r\n            }  \r\n        }\r\n        \r\n    }\r\n\r\n    \r\n  \r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Home from './Components/Home'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Home/>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}